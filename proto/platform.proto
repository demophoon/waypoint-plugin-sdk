syntax = "proto3";

package proto;

option go_package = ".;proto";

import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "plugin.proto";

// Platform is responsible for deploying an artifact that is in a registry.
service Platform {
  rpc IsAuthenticator(google.protobuf.Empty) returns (ImplementsResp);
  rpc Auth(FuncSpec.Args) returns (Auth.AuthResponse);
  rpc AuthSpec(google.protobuf.Empty) returns (FuncSpec);
  rpc ValidateAuth(FuncSpec.Args) returns (google.protobuf.Empty);
  rpc ValidateAuthSpec(google.protobuf.Empty) returns (FuncSpec);

  rpc ConfigStruct(google.protobuf.Empty) returns (Config.StructResp);
  rpc Configure(Config.ConfigureRequest) returns (google.protobuf.Empty);
  rpc Documentation(google.protobuf.Empty) returns (Config.Documentation);

  rpc DeploySpec(Empty) returns (FuncSpec);
  rpc Deploy(FuncSpec.Args) returns (Deploy.Resp);

  // component.PlatformReleaser optional implementation.
  rpc DefaultReleaserSpec(google.protobuf.Empty) returns (FuncSpec);
  rpc DefaultReleaser(FuncSpec.Args) returns (DefaultReleaser.Resp);

  // component.Destroyer optional implementation
  rpc IsDestroyer(google.protobuf.Empty) returns (ImplementsResp);
  rpc DestroySpec(google.protobuf.Empty) returns (FuncSpec);
  rpc Destroy(FuncSpec.Args) returns (google.protobuf.Empty);

  // component.WorkspaceDestroyer optional implementation
  rpc IsWorkspaceDestroyer(google.protobuf.Empty) returns (ImplementsResp);
  rpc DestroyWorkspaceSpec(google.protobuf.Empty) returns (FuncSpec);
  rpc DestroyWorkspace(FuncSpec.Args) returns (google.protobuf.Empty);

  // IsLogPlatform returns true if this platform also implements LogPlatform.
  rpc IsLogPlatform(google.protobuf.Empty) returns (ImplementsResp);
}

message DefaultReleaser {
  message Resp {
    // stream_id is the stream ID to connect to to get access to the
    // ReleaseManager implementation.
    uint32 stream_id = 1;
  }
}

message Deploy {
  message Resp {
    // result is the resulting opaque data type
    google.protobuf.Any result = 1;
  }
}
